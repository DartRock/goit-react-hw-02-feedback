{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/StatisticsItem/StatisticsItem.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","StatisticsItem","value","Statistics","good","neutral","bad","total","positivePercentage","App","state","feedbackHandler","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAUaA,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACA,oCACE,6BAAKD,IACJC,MCbMC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAEvC,OACI,8BACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,wBAEAC,KAAK,SACLC,QAAS,kBAAMN,EAAgBI,IAH/B,SAKCA,GAJIA,SCNRG,EAAiB,SAAC,GAAoB,IAAnBX,EAAkB,EAAlBA,MAAOY,EAAW,EAAXA,MACnC,OAAQ,mCAAK,8BAAIZ,EAAJ,KAAY,+BAAOY,WCAvBC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACI,qCACI,4CACCD,EAAQ,+BACL,cAAC,EAAD,CAAgBjB,MAAM,OAAOY,MAAOE,IACpC,cAAC,EAAD,CAAgBd,MAAM,UAAUY,MAAOG,IACvC,cAAC,EAAD,CAAgBf,MAAM,MAAMY,MAAOI,IACnC,cAAC,EAAD,CAAgBhB,MAAM,QAAQY,MAAOK,IACrC,cAAC,EAAD,CAAgBjB,MAAM,oBAAoBY,OAAQM,GAA0C,GAAK,SAC7F,wBCNdC,G,kNACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,gBAAkB,SAAAb,GAChB,EAAKc,UAAS,SAAAC,GAAI,sBAAQf,EAASe,EAAKf,GAAU,O,EAGpDgB,mBAAqB,WACnB,OAAO,EAAKJ,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAG3DS,gCAAkC,WAChC,OAAOC,KAAKC,KAAM,EAAKP,MAAMN,KAAO,EAAKU,qBAAwB,M,4CAGnE,WACE,MAA+BI,KAAKR,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,mCACE,eAAC,EAAD,CAAShB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEG,QAASyB,KAAKR,MACdhB,gBAAiBwB,KAAKP,kBAExB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,KAAKJ,qBACZN,mBAAoBU,KAAKH,6C,GAlCnBI,cA0CHV,I,YC1CfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5fa43379.chunk.js","sourcesContent":["\r\n// export const Section = (title, children) => {\r\n//     return (\r\n//         <section>\r\n//             <h1>{title}</h1>\r\n//             {children}\r\n//         </section>\r\n//     )\r\n// }\r\n\r\nexport const Section = ({title, children}) => {\r\n    return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}","\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    \r\n    return (\r\n        <div>\r\n            {Object.keys(options).map((option) => (\r\n                <button\r\n                key={option}\r\n                type=\"button\"\r\n                onClick={() => onLeaveFeedback(option)}\r\n                >\r\n                {option}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const StatisticsItem = ({title, value}) => {\r\n    return (<li> <p>{title}: <span>{value}</span></p></li> )\r\n}\r\n","import { StatisticsItem } from \"./StatisticsItem/StatisticsItem\"\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return  (\r\n        <>  \r\n            <h2>Statistics</h2>\r\n            {total ? <ul>\r\n                <StatisticsItem title=\"Good\" value={good}/>\r\n                <StatisticsItem title=\"Neutral\" value={neutral}/>\r\n                <StatisticsItem title=\"Bad\" value={bad}/>\r\n                <StatisticsItem title=\"Total\" value={total}/>\r\n                <StatisticsItem title=\"Positive feedback\" value={(positivePercentage ? positivePercentage : 0) + '%'}/>\r\n            </ul> : 'No feedback given'}\r\n        </>\r\n    )\r\n}\r\n","import { Component } from 'react';\nimport { Section } from './components/Section/Section';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './components/Statistics/Statistics';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackHandler = option => {\n    this.setState(prev => ({ [option]: prev[option] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackHandler}\n          />\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}